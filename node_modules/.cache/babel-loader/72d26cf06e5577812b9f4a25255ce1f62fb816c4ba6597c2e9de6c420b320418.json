{"ast":null,"code":"var _jsxFileName = \"/Users/haducthanhvien/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    label,\n    anecdotes,\n    selected\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: label,\n    children: \" next anecdote \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst Button_Vote = _ref2 => {\n  let {\n    label,\n    vote,\n    selected\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: label,\n    children: \" vote \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button_Vote;\nconst Print = _ref3 => {\n  let {\n    vote_selected\n  } = _ref3;\n  if (vote_selected <= 1) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" has \", vote_selected, \" vote \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);else return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" has \", vote_selected, \" votes \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Print;\nconst App = () => {\n  _s();\n  const [selected, setSelected] = useState(0);\n  const [vote, setVote] = useState([0, 0, 0, 0, 0, 0, 0, 0]);\n  const [pos, setPos] = useState(0);\n  const [max_vote, setMax_vote] = useState(0);\n  const anecdotes = ['If it hurts, do it more often.', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.', 'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.', 'The only way to go fast, is to go well.'];\n  const printRanNum = () => {\n    var x = Math.floor(Math.random() * 8);\n    setSelected(x);\n  };\n  /*\n  Remember that the correct way of updating state stored in complex data structures like objects and arrays is to make a copy of the state.\n  */\n  const increaseVoteByOne = () => {\n    let newArr = [...vote];\n    newArr[selected] += 1;\n    if (max_vote <= newArr[selected]) {\n      setPos(selected);\n      setMax_vote(newArr[selected]);\n    }\n    console.log(pos);\n    console.log(max_vote);\n    setVote(newArr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Anecdote of the day \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), anecdotes[selected], /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Print, {\n      vote_selected: vote[selected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button_Vote, {\n      label: increaseVoteByOne,\n      vote: vote,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: printRanNum,\n      anecdotes: anecdotes,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Anecdote with most votes \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), anecdotes[pos], /*#__PURE__*/_jsxDEV(Print, {\n      vote_selected: max_vote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KbVIa9V+zUGFlSQQ+hlu6w/nN2Q=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Button_Vote\");\n$RefreshReg$(_c3, \"Print\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","label","anecdotes","selected","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Button_Vote","_ref2","vote","_c2","Print","_ref3","vote_selected","_c3","App","_s","setSelected","setVote","pos","setPos","max_vote","setMax_vote","printRanNum","x","Math","floor","random","increaseVoteByOne","newArr","console","log","_c4","$RefreshReg$"],"sources":["/Users/haducthanhvien/part1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({label, anecdotes, selected}) => {\n  return (\n    <button onClick = {label}> next anecdote </button>\n  )\n}\nconst Button_Vote = ({label, vote, selected}) => {\n  return (\n    <button onClick={label}> vote </button>\n  )\n} \nconst Print = ({vote_selected}) => {\n  if(vote_selected <= 1)\n    return <p> has {vote_selected} vote </p>\n  else\n    return <p> has {vote_selected} votes </p>\n}\nconst App = () => {\n  const [selected, setSelected] = useState(0)\n  const [vote, setVote] = useState([0, 0, 0, 0, 0, 0, 0, 0]);\n  const [pos, setPos] = useState(0)\n  const [max_vote, setMax_vote] = useState(0)\n  const anecdotes = [\n    'If it hurts, do it more often.',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n    'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.',\n    'The only way to go fast, is to go well.'\n  ]\n  \n  const printRanNum = () => {\n    var x = Math.floor((Math.random() * 8))\n    setSelected(x)\n    \n  }\n  /*\n  Remember that the correct way of updating state stored in complex data structures like objects and arrays is to make a copy of the state.\n  */\n  const increaseVoteByOne = () => {\n    let newArr = [...vote]\n    newArr[selected] += 1\n    if(max_vote <= newArr[selected]){\n      setPos(selected)\n      setMax_vote(newArr[selected])\n    }\n    console.log(pos)\n    console.log(max_vote)\n    setVote(newArr)\n  }\n\n  return (\n    <div>\n      <h1> Anecdote of the day </h1>\n      {anecdotes[selected]}\n      <p> </p>\n      <Print vote_selected = {vote[selected]}/>\n      <p> </p>\n        <Button_Vote label = {increaseVoteByOne} vote = {vote} selected = {selected}/> \n        <Button label = {printRanNum} anecdotes = {anecdotes} selected = {selected}/>\n      <h1> Anecdote with most votes </h1>\n      {anecdotes[pos]}\n      <Print vote_selected = {max_vote} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}